-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;

DROP TABLE IF EXISTS public.article CASCADE;
CREATE TABLE public.article
(
    article_id integer NOT NULL,
    title text COLLATE pg_catalog."default",
    content text COLLATE pg_catalog."default" NOT NULL,
    article_url character varying(1000) COLLATE pg_catalog."default" NOT NULL,
    domain character varying(1000) COLLATE pg_catalog."default" NOT NULL,
    scraped_at date NOT NULL,
    inserted_at date NOT NULL,
    updated_at date NOT NULL,
    CONSTRAINT article_pkey PRIMARY KEY (article_id)
);

DROP TABLE IF EXISTS public.author CASCADE;
CREATE TABLE IF NOT EXISTS public.author
(
    author_id integer NOT NULL,
    name character varying(500) COLLATE pg_catalog."default",
    CONSTRAINT author_pkey PRIMARY KEY (author_id)
);

DROP TABLE IF EXISTS public.keyword CASCADE;
CREATE TABLE IF NOT EXISTS public.keyword
(
    kw_id integer NOT NULL,
    keyword character varying(500) COLLATE pg_catalog."default",
    CONSTRAINT keyword_pkey PRIMARY KEY (kw_id)
);

DROP TABLE IF EXISTS public.meta_keyword CASCADE;
CREATE TABLE IF NOT EXISTS public.meta_keyword
(
    meta_kw_id integer NOT NULL,
    keyword character varying(500) COLLATE pg_catalog."default",
    CONSTRAINT meta_keyword_pkey PRIMARY KEY (meta_kw_id)
);

DROP TABLE IF EXISTS public.tag CASCADE;
CREATE TABLE IF NOT EXISTS public.tag
(
    tag_id integer NOT NULL,
    tag character varying(500) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tag_pkey PRIMARY KEY (tag_id)
);

DROP TABLE IF EXISTS public.type CASCADE;
CREATE TABLE IF NOT EXISTS public.type
(
    type_id integer NOT NULL,
    type character varying(500) COLLATE pg_catalog."default",
    CONSTRAINT type_pkey PRIMARY KEY (type_id)
);

DROP TABLE IF EXISTS public.article_author CASCADE;
CREATE TABLE IF NOT EXISTS public.article_author
(
    article_article_id integer NOT NULL,
    author_author_id integer NOT NULL
);

DROP TABLE IF EXISTS public.article_keyword CASCADE;
CREATE TABLE IF NOT EXISTS public.article_keyword
(
    article_article_id integer NOT NULL,
    keyword_kw_id integer NOT NULL
);

DROP TABLE IF EXISTS public.article_meta_keyword CASCADE;
CREATE TABLE IF NOT EXISTS public.article_meta_keyword
(
    article_article_id integer NOT NULL,
    meta_keyword_meta_kw_id integer NOT NULL
);

DROP TABLE IF EXISTS public.article_type CASCADE;
CREATE TABLE IF NOT EXISTS public.article_type
(
    article_article_id integer NOT NULL,
    type_type_id integer NOT NULL
);

DROP TABLE IF EXISTS public.article_tag CASCADE;
CREATE TABLE IF NOT EXISTS public.article_tag
(
    article_article_id integer NOT NULL,
    tag_tag_id integer NOT NULL
);

ALTER TABLE IF EXISTS public.article_author
    ADD FOREIGN KEY (article_article_id)
    REFERENCES public.article (article_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.article_author
    ADD FOREIGN KEY (author_author_id)
    REFERENCES public.author (author_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.article_keyword
    ADD FOREIGN KEY (article_article_id)
    REFERENCES public.article (article_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.article_keyword
    ADD FOREIGN KEY (keyword_kw_id)
    REFERENCES public.keyword (kw_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.article_meta_keyword
    ADD FOREIGN KEY (article_article_id)
    REFERENCES public.article (article_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.article_meta_keyword
    ADD FOREIGN KEY (meta_keyword_meta_kw_id)
    REFERENCES public.meta_keyword (meta_kw_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.article_type
    ADD FOREIGN KEY (article_article_id)
    REFERENCES public.article (article_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.article_type
    ADD FOREIGN KEY (type_type_id)
    REFERENCES public.type (type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.article_tag
    ADD FOREIGN KEY (article_article_id)
    REFERENCES public.article (article_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.article_tag
    ADD FOREIGN KEY (tag_tag_id)
    REFERENCES public.tag (tag_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;